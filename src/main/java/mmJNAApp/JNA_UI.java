package mmJNAApp;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.NativeLong;

/**
 *
 * @author bchhun
 */
public class JNA_UI extends javax.swing.JFrame {
    
    private static DemoCameraStageDevice stage;
    private static PointerByReference ptr;

    /**
     * Creates new form JNA_UI
     */
    public JNA_UI() {
        initComponents();
        stage = new DemoCameraStageDevice();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        initialize_module = new javax.swing.JButton();
        get_number_of_devices = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        create_device = new javax.swing.JButton();
        get_module_version = new javax.swing.JButton();
        get_device_interface_version = new javax.swing.JButton();
        get_device_name = new javax.swing.JButton();
        get_device_description = new javax.swing.JButton();
        delete_device = new javax.swing.JButton();
        get_device_type = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        initialize_module.setText("initialize module");
        initialize_module.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initialize_moduleActionPerformed(evt);
            }
        });

        get_number_of_devices.setText("get number of devices");
        get_number_of_devices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                get_number_of_devicesActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        create_device.setText("create device");
        create_device.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_deviceActionPerformed(evt);
            }
        });

        get_module_version.setText("get module version");
        get_module_version.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                get_module_versionActionPerformed(evt);
            }
        });

        get_device_interface_version.setText("get device interface version");
        get_device_interface_version.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                get_device_interface_versionActionPerformed(evt);
            }
        });

        get_device_name.setText("get device name");
        get_device_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                get_device_nameActionPerformed(evt);
            }
        });

        get_device_description.setText("get device description");

        delete_device.setText("delete device");
        delete_device.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_deviceActionPerformed(evt);
            }
        });

        get_device_type.setText("get device type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(create_device)
                    .addComponent(initialize_module)
                    .addComponent(delete_device)
                    .addComponent(get_module_version)
                    .addComponent(get_device_interface_version)
                    .addComponent(get_device_name)
                    .addComponent(get_device_type)
                    .addComponent(get_number_of_devices)
                    .addComponent(get_device_description))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(initialize_module)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(create_device)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete_device)
                        .addGap(30, 30, 30)
                        .addComponent(get_module_version)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(get_device_interface_version)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(get_number_of_devices)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(get_device_name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(get_device_type)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(get_device_description)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initialize_moduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initialize_moduleActionPerformed
        // TODO add your handling code here:
        //int out = ASI.Home();
        stage.InitializeModuleData();
        jTextArea1.append("\n DC_stage_init performed");
    }//GEN-LAST:event_initialize_moduleActionPerformed

    private void get_number_of_devicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_get_number_of_devicesActionPerformed
        // TODO add your handling code here:
        //int out = ASI.SetOrigin();
        int out = stage.GetNumberOfDevices();
        jTextArea1.append("\n DC get number of devices = "+out);
    }//GEN-LAST:event_get_number_of_devicesActionPerformed

    private void create_deviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_deviceActionPerformed
        // TODO add your handling code here:
        jTextArea1.append("\n Calling PTR");
        // must search github to learn the device type = DStage
        ptr = stage.CreateDevice("DStage", jTextArea1);
    }//GEN-LAST:event_create_deviceActionPerformed

    private void get_module_versionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_get_module_versionActionPerformed
        // TODO add your handling code here:
        NativeLong MV = stage.GetModuleVersion();
        jTextArea1.append("\n Module Version = "+MV);
    }//GEN-LAST:event_get_module_versionActionPerformed

    private void get_device_interface_versionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_get_device_interface_versionActionPerformed
        // TODO add your handling code here:
        NativeLong DIV = stage.GetDeviceInterfaceVersion();
        jTextArea1.append("\n Device Interface Version = "+DIV);
    }//GEN-LAST:event_get_device_interface_versionActionPerformed

    private void delete_deviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_deviceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_deviceActionPerformed

    private void get_device_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_get_device_nameActionPerformed
        // TODO add your handling code here:
        boolean devName = stage.GetDeviceName(ICONIFIED, "DStage", FRAMEBITS);
        jTextArea1.append("\n Device Name = "+devName);
    }//GEN-LAST:event_get_device_nameActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JNA_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JNA_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JNA_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JNA_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JNA_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton create_device;
    private javax.swing.JButton delete_device;
    private javax.swing.JButton get_device_description;
    private javax.swing.JButton get_device_interface_version;
    private javax.swing.JButton get_device_name;
    private javax.swing.JButton get_device_type;
    private javax.swing.JButton get_module_version;
    private javax.swing.JButton get_number_of_devices;
    private javax.swing.JButton initialize_module;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
